name: Release

on:
  push:
    branches:
      - '*'
      - '!main'

concurrency: ${{ github.workflow }}-${{ github.ref }}

permissions:
  contents: write
  packages: write

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Setup Node.js 16.x
        uses: actions/setup-node@v3
        with:
          node-version: 16.x

      - name: Install Dependencies
        run: npm install 

      - name: Check for Tags and Create if None
        id: check-tags
        run: |
          tag=$(git describe --tags --abbrev=0 2>/dev/null || echo "")
          
          if [ -z "$tag" ]; then
            echo "No tags found. Creating a new tag."
            git config user.name "${{ github.actor }}"
            git config user.email "${{ github.actor }}@users.noreply.github.com"
            git add .
            git commit -m "Committing changes before tagging"
            npm version patch -m "Bump version to %s"
            git push --follow-tags
          else
            echo "Latest tag: $tag"
          fi

      - name: Create Release Pull Request or Publish to npm
        id: changesets
        uses: changesets/action@v1
        with:
          publish: npm run release
        env:
          GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Update GitHub Release
        if: steps.check-tags.outputs.result == 'success'
        run: |
          tag=$(git describe --tags --abbrev=0)
          changelog=$(cat CHANGELOG.md)
          prerelease=true # Set to false for a regular release, true for a pre-release
          body="### Changelog\n\n$changelog"

          echo "Creating GitHub Release..."
          curl -X POST -H "Authorization: Bearer ${{ secrets.REPO_TOKEN }}" \
            -d "{\"tag_name\":\"$tag\",\"name\":\"$tag\",\"body\":\"$body\",\"prerelease\":$prerelease}" \
            "https://api.github.com/repos/${{ github.repository }}/releases"

        env:
          GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}
